generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ArtExhibition {
  id             Int              @id @default(autoincrement())
  titleAr        String
  titleFr        String
  artistAr       String
  artistFr       String
  datesAr        String
  datesFr        String
  locationAr     String
  locationFr     String
  descriptionAr  String
  descriptionFr  String
  image          String?
  status         ExhibitionStatus @default(UPCOMING)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  localisationAr String           @default("")
  localisationFr String           @default("")
  organizersAr   String           @default("")
  organizersFr   String           @default("")

  @@map("art_exhibitions")
}

model Article {
  id               Int             @id @default(autoincrement())
  titleAr          String
  titleFr          String
  authorAr         String
  authorFr         String
  translatorAr     String?
  translatorFr     String?
  date             DateTime
  category         ArticleCategory
  categoryLabelAr  String
  categoryLabelFr  String
  image            String
  excerptAr        String
  excerptFr        String
  contentAr        String
  contentFr        String
  additionalImages String[]
  published        Boolean         @default(true)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt

  @@map("articles")
}

model WorkshopCategory {
  id            Int        @id @default(autoincrement())
  titleAr       String
  titleFr       String
  icon          String
  descriptionAr String
  descriptionFr String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  workshops     Workshop[]

  @@map("workshop_categories")
}

model Workshop {
  id             Int              @id @default(autoincrement())
  titleAr        String
  titleFr        String
  dateAr         String
  dateFr         String
  time           String
  locationAr     String
  locationFr     String
  instructorAr   String
  instructorFr   String
  price          String
  status         WorkshopStatus   @default(OPEN)
  categoryId     Int
  examplesAr     String[]
  examplesFr     String[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  localisationAr String           @default("")
  localisationFr String           @default("")
  organizersAr   String           @default("")
  organizersFr   String           @default("")
  category       WorkshopCategory @relation(fields: [categoryId], references: [id])

  @@map("workshops")
}

model LiteraryEvent {
  id             Int         @id @default(autoincrement())
  titleAr        String
  titleFr        String
  dateAr         String
  dateFr         String
  locationAr     String
  locationFr     String
  descriptionAr  String
  descriptionFr  String
  image          String
  status         EventStatus @default(UPCOMING)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  localisationAr String      @default("")
  localisationFr String      @default("")
  organizersAr   String      @default("")
  organizersFr   String      @default("")

  @@map("literary_events")
}

model CulturalChannelContent {
  id                Int      @id @default(autoincrement())
  pageTitleAr       String
  pageTitleFr       String
  pageDescriptionAr String
  pageDescriptionFr String
  updatedAt         DateTime @updatedAt

  @@map("cultural_channel_content")
}

model CulturalChannelVideo {
  id            Int      @id @default(autoincrement())
  youtubeId     String   @unique
  titleAr       String
  titleFr       String
  descriptionAr String
  descriptionFr String
  thumbnail     String?
  publishDate   DateTime
  category      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("cultural_channel_videos")
}

model PublicationIssue {
  id         Int      @id @default(autoincrement())
  magazine   Magazine
  number     Int
  titleAr    String
  titleFr    String
  date       DateTime
  image      String
  featuredAr String
  featuredFr String
  contentAr  String
  contentFr  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([magazine, number])
  @@map("publication_issues")
}

model PartnersPageContent {
  id                Int      @id @default(autoincrement())
  pageTitleAr       String
  pageTitleFr       String
  pageDescriptionAr String
  pageDescriptionFr String
  updatedAt         DateTime @updatedAt

  @@map("partners_page_content")
}

model Partner {
  id            Int      @id @default(autoincrement())
  nameAr        String
  nameFr        String
  descriptionAr String
  descriptionFr String
  logo          String
  website       String?
  type          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("partners")
}

model CollaborativeProgram {
  id            Int      @id @default(autoincrement())
  titleAr       String
  titleFr       String
  descriptionAr String
  descriptionFr String
  partnerNameAr String
  partnerNameFr String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("collaborative_programs")
}

model Book {
  id            Int      @id @default(autoincrement())
  titleAr       String
  titleFr       String
  authorAr      String
  authorFr      String
  year          String
  pages         Int
  isbn          String   @unique
  image         String?
  descriptionAr String
  descriptionFr String
  summaryAr     String
  summaryFr     String
  downloadUrl   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("books")
}

enum ExhibitionStatus {
  CURRENT
  UPCOMING
  PAST
}

enum ArticleCategory {
  VISUAL_ARTS
  LITERARY_THOUGHT
  PROEMES
  EDUCATION
}

enum WorkshopStatus {
  OPEN
  ALMOST_FULL
  FULL
  COMPLETED
}

enum EventStatus {
  UPCOMING
  PAST
  CANCELLED
}

enum Magazine {
  AMIS_DIONYSOS
  ART_CHIV
  BIAIS_ARTISTIQUES
  BOOKS
}
